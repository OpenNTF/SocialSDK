<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.ibm.sbt.sdk</groupId>
  <artifactId>distribution</artifactId>
  <version>1.0.0</version>
  <packaging>pom</packaging>

  <pluginRepositories>
    <pluginRepository>
      <id>sonatype-public-repository</id>
      <url>https://oss.sonatype.org/content/groups/public</url>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
      <releases>
        <enabled>true</enabled>
      </releases>
    </pluginRepository>
  </pluginRepositories>

  <properties>
    <project.target.directory>${build.target}</project.target.directory>
    <project.platform.directory>${user.dir}/../platform</project.platform.directory>
    <project.prereqs.directory>${user.dir}/../prereqs</project.prereqs.directory>
  </properties>

  <parent>
    <groupId>com.ibm.sbt</groupId>
    <artifactId>sbt.build</artifactId>
    <version>1.0.0</version>
    <relativePath>..</relativePath>
  </parent>

  <build>
    <plugins>
      <plugin>
        <groupId>com.googlecode.maven-download-plugin</groupId>
        <artifactId>maven-download-plugin</artifactId>
        <version>1.0.0</version>
        <executions>
	  <execution>
	    <id>download-tomcat-7</id>
	    <phase>pre-integration-test</phase>
	    <goals>
	      <goal>wget</goal>
	    </goals>
	    <configuration>
	      <url>http://archive.apache.org/dist/tomcat/tomcat-7/v7.0.30/bin/apache-tomcat-7.0.30.zip</url>
	        <unpack>true</unpack>
		<outputDirectory>${project.target.directory}/tomcat/unzip</outputDirectory>
		<md5>3a1fd1825202631e6c43461fa018c4f6</md5>
	    </configuration>
	  </execution>
	</executions>
      </plugin>
      <plugin>
	<artifactId>maven-antrun-plugin</artifactId>
	<version>1.7</version>
	<executions>
	  <execution>
	    <phase>post-integration-test</phase>
	    <configuration>
	      <target>
	        <!-- Package Tomcat -->
            <delete dir="${project.target.directory}/tomcat/unzip/apache-tomcat-7.0.30/webapps/ROOT"/>
            
            <copy todir="${project.target.directory}/tomcat/unzip/apache-tomcat-7.0.30/webapps" 
                file="${project.target.directory}/com.ibm.sbt.sdk/sbt/sbt.war"/>
            <copy todir="${project.target.directory}/tomcat/unzip/apache-tomcat-7.0.30/webapps" 
                file="${project.target.directory}/com.ibm.sbt.sdk/sbt.dojo180/sbt.dojo180.war"/>
            <copy todir="${project.target.directory}/tomcat/unzip/apache-tomcat-7.0.30/webapps" 
                file="${project.target.directory}/com.ibm.sbt.sdk/sbt.jquery182/sbt.jquery182.war"/>
            <copy todir="${project.target.directory}/tomcat/unzip/apache-tomcat-7.0.30/webapps" 
                file="${project.target.directory}/com.ibm.sbt.sdk/sbt.bootstrap211/sbt.bootstrap211.war"/>
            <copy todir="${project.target.directory}/tomcat/unzip/apache-tomcat-7.0.30/webapps" 
                file="${project.target.directory}/com.ibm.sbt.sample/sbt.sample.web/sbt.sample.web.war"/>
            <copy tofile="${project.target.directory}/tomcat/unzip/apache-tomcat-7.0.30/webapps/ROOT.war" 
                file="${project.target.directory}/com.ibm.sbt.sample/com.ibm.sbt.landing/com.ibm.sbt.landing.war"/>
            <copy todir="${project.target.directory}/tomcat/unzip/apache-tomcat-7.0.30/webapps" 
                file="${project.target.directory}/com.ibm.sbt.sample/acme.social.sample.dataapp/acme.social.sample.dataapp.war"/>
            <copy todir="${project.target.directory}/tomcat/unzip/apache-tomcat-7.0.30/webapps" 
                file="${project.target.directory}/com.ibm.sbt.sample/acme.social.sample.webapp/acme.social.sample.webapp.war"/>
            <copy todir="${project.target.directory}/tomcat/unzip/apache-tomcat-7.0.30/webapps" 
                file="${project.target.directory}/com.ibm.sbt.sample/helloworld.webapp/helloworld.webapp.war"/>
            <copy todir="${project.target.directory}/tomcat/unzip/apache-tomcat-7.0.30/webapps" 
                file="${project.target.directory}/com.ibm.sbt.sample/smartcloud.webapp/smartcloud.webapp.war"/>
            <copy todir="${project.target.directory}/tomcat/unzip/apache-tomcat-7.0.30/webapps" 
                file="${project.target.directory}/com.ibm.sbt.sample/acme.sample.webapp/acme.sample.webapp.war"/>
            <copy todir="${project.target.directory}/tomcat/unzip/apache-tomcat-7.0.30/conf" 
                file="./../../src/config/sbt.properties"/>
                
                
            <copy file="${project.target.directory}/com.ibm.sbt.sdk/com.ibm.commons.runtime/com.ibm.commons.runtime.jar" 
			todir="${project.target.directory}/tomcat/unzip/apache-tomcat-7.0.30/lib" />
	        <copy file="${project.prereqs.directory}/eclipse/plugins/com.ibm.sbt.libs.java/lib/commons-logging-1.1.1.jar"
			todir="${project.target.directory}/tomcat/unzip/apache-tomcat-7.0.30/lib" />
            <copy file="${project.prereqs.directory}/eclipse/plugins/com.ibm.sbt.libs.java/lib/com.ibm.sbt.javamail-1.4.5.jar"
            todir="${project.target.directory}/tomcat/unzip/apache-tomcat-7.0.30/lib" />
           
                         
	        <copy todir="${project.target.directory}/tomcat/unzip/apache-tomcat-7.0.30/conf" >
	          <fileset dir="${project.platform.directory}/tomcat" >
		    <include name="keystore"/>
		    <include name="context.xml"/>
		    <include name="tomcat-users.xml"/>
		    <include name="server.xml"/>
		  </fileset>
	        </copy>

	        <zip basedir="${project.target.directory}/tomcat/unzip" 
			destfile="${project.target.directory}/tomcat/apache-tomcat-7.0.30-sbt.zip" compress="true"/>
	        <delete dir="${project.target.directory}/tomcat/unzip" />

	        <!-- Create Update Site -->
	        <zip basedir="${project.target.directory}/com.ibm.sbt.domino/com.ibm.sbt.domino.updatesite/site" 
			destfile="${project.target.directory}/com.ibm.sbt.domino/com.ibm.sbt.domino.updatesite/com.ibm.sbt.domino.updatesite.zip" 
			compress="true"/>
	        <delete dir="${project.target.directory}/com.ibm.sbt.domino/com.ibm.sbt.domino.updatesite/site.zip"/>

          <!-- Create Update Site -->
          <zip basedir="${project.target.directory}/com.ibm.sbt.domino/com.ibm.sbt.domino.playground.updatesite/site" 
          destfile="${project.target.directory}/com.ibm.sbt.domino/com.ibm.sbt.domino.playground.updatesite/com.ibm.sbt.domino.playground.updatesite.zip" 
          compress="true"/>
          <delete dir="${project.target.directory}/com.ibm.sbt.domino/com.ibm.sbt.domino.playground.updatesite/site.zip"/>

	        <!-- Create a version file -->
	        <echo file="${project.target.directory}/doc/version.txt">version: ${project.version}.${buildLabel}</echo>

	        <!-- Create a changelog file -->
	        <exec executable="${toolsDir}\git\bin\git.exe"  failonerror="false" output="${project.target.directory}/doc/changelog.txt">
	          <arg value="log" />
		  <arg value="--no-merges" />
	  	  <arg value="--pretty=%h %s" />
	        </exec>
	        <exec executable="${toolsDir}\git\bin\git.exe"  failonerror="false" output="${project.target.directory}/doc/weekly.txt">
		  <arg value="log" />
		  <arg value="--pretty=%h %s" />
          <arg value="--grep=Merge pull" />
		  <arg value="--since" />
	  	  <arg value="1 week ago" />
	        </exec>

	       <!-- sanity checks before starting assembly -->
	       <available  property="doc.dir" file="${project.target.directory}/doc" />
	       <fail unless="doc.dir" message="No documentation generated" />
	       <available  property="javadoc.index" file="${project.target.directory}/doc/javadoc/index.html" />

	       <!--  waiting to enable this for the javadoc first execution error is fixed
	       <fail unless="javadoc.index" message="No javadoc generated" /> -->
	       <available  property="jsdoc.index" file="${project.target.directory}/doc/jsdoc/index.html" />
	       <fail unless="jsdoc.index" message="No jsdoc generated" />

	       <available  property="version.info" file="${project.target.directory}/doc/version.txt" />
	       <available  property="changes.info" file="${project.target.directory}/doc/changelog.txt" />
	       <available  property="weekly.info" file="${project.target.directory}/doc/weekly.txt" />

	       <fail unless="version.info" message="Missing version.txt" />
	       <fail unless="changes.info" message="Missing changelog.txt" />
	       <fail unless="weekly.info" message="Missing weekly.txt" />

	       <available property="updatesite.zip" 
			file="${project.target.directory}/com.ibm.sbt.domino/com.ibm.sbt.domino.updatesite/com.ibm.sbt.domino.updatesite.zip" />
	       <fail unless="updatesite.zip" message="Update site not found" />
             </target>
	   </configuration>
	   <goals>
	     <goal>run</goal>
	   </goals>
         </execution>
       </executions>
     </plugin>
      <plugin>
	<groupId>org.apache.maven.plugins</groupId>
	<artifactId>maven-assembly-plugin</artifactId>
	<version>2.3</version>
	<executions>
	  <execution>
	    <phase>post-integration-test</phase>
	    <goals>
	      <goal>single</goal>
	    </goals>
	    <configuration>
	      <descriptor>assembly.xml</descriptor>
	      <finalName>sbtsdk-${project.version}.${buildLabel}</finalName>
	      <appendAssemblyId>false</appendAssemblyId>
	      <outputDirectory>${build.output}</outputDirectory>
	    </configuration>
	  </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
