<?xml version="1.0" encoding="UTF-8"?>
<xp:view xmlns:xp="http://www.ibm.com/xsp/core" xmlns:xc="http://www.ibm.com/xsp/custom"
	xmlns:xe="http://www.ibm.com/xsp/coreex">
	<xp:this.resources>
		<xp:dojoModule name="dijit.ProgressBar"></xp:dojoModule>
		<xp:dojoModule name="extlib.dijit.ExtLib"></xp:dojoModule>
	</xp:this.resources>
	<xe:jsonRpcService id="jsonRpcService1" serviceName="job">
		<xe:this.methods>
			<xe:remoteMethod name="getStatus">
				<xe:this.script><![CDATA[var job = nsf.playground.jobs.AsyncAction.getJobProgressJavaScript(compositeData.jobId)
return job]]></xe:this.script>
			</xe:remoteMethod>
		</xe:this.methods>
	</xe:jsonRpcService>

	<xp:scriptBlock id="scriptBlock1">
		<xp:this.value><![CDATA[
var _statusTs = -1;		
function xspAsyncProgressUpdate() {
	if(!job) {
		setTimeout(xspAsyncProgressUpdate,50);
		return;
	}
	var deferred = job.getStatus()
	deferred.addCallback(function(result) {
		//console.log("LOG: "+XSP.toJson(result))
		var divProgress = dojo.byId("#{id:infoProgress}");
		var divOk = dojo.byId("#{id:infoOk}");
		var divCancel = dojo.byId("#{id:infoCancel}");
		if(result.running) {
			dojo.style(divProgress,"display","block");
			dojo.style(divOk,"display","none");
			dojo.style(divCancel,"display","none");
			var label = dojo.byId("#{id:progressStatus}");
			if(label) XSP.setNodeText(label,result.taskLabel);
		} else {
			if(result.statusTs!=_statusTs) {
				console.log(result.statusTs);
				try {
			    	_statusTs = result.statusTs; 
					dojo.style(divProgress,"display","none");
					if(result.cancelled) {
						dojo.style(divOk,"display","none");
						dojo.style(divCancel,"display","block");
						var label = dojo.byId("#{id:cancelStatus}");
						if(label) XSP.setNodeText(label,result.taskLabel);
					} else {
						dojo.style(divOk,"display","block");
						dojo.style(divCancel,"display","none");
						var label = dojo.byId("#{id:okStatus}");
						if(label) XSP.setNodeText(label,result.taskLabel);
					}
				} catch(e) {console.log(e);}				
			}
		
		}
		setTimeout(xspAsyncProgressUpdate,800);
	});
}
setTimeout(xspAsyncProgressUpdate,50);
]]></xp:this.value>
	</xp:scriptBlock>

	<xp:div id="infoOk" styleClass="lotusMessage lotusConfirm"
		style="display:none">
		<xp:div id="okStatus" styleClass="lotusMessageBody">Import Successful
		</xp:div>
	</xp:div>

	<xp:div id="infoCancel" styleClass="lotusMessage lotusError"
		style="display:none">
		<xp:div id="cancelStatus" styleClass="lotusMessageBody"></xp:div>
	</xp:div>

	<xp:div id="infoProgress" styleClass="lotusMessage lotusInfo"
		style="display:none">
		<xp:div id="progressStatus" styleClass="lotusMessageBody"></xp:div>
		<xp:link escape="true" text="Cancel" id="link1" styleClass="lotusDelete"
			role="button">
			<xp:eventHandler event="onclick" submit="true"
				refreshMode="norefresh">
				<xp:this.action><![CDATA[#{javascript:nsf.playground.jobs.AsyncAction.cancel(compositeData.jobId)}]]></xp:this.action>
			</xp:eventHandler>
		</xp:link>
	</xp:div>

</xp:view>
